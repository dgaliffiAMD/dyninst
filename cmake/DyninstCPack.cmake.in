
# Add packaging directives for @PROJECT_NAME@
set(CPACK_PACKAGE_NAME "@PROJECT_NAME@")
set(CPACK_PACKAGE_VENDOR "@PROJECT_VENDOR@")
set(CPACK_PACKAGE_DESCRIPTION_SUMMARY "@PROJECT_DESCRIPTION@")
set(CPACK_PACKAGE_VERSION_MAJOR "@PROJECT_VERSION_MAJOR@")
set(CPACK_PACKAGE_VERSION_MINOR "@PROJECT_VERSION_MINOR@")
set(CPACK_PACKAGE_VERSION_PATCH "@PROJECT_VERSION_PATCH@")
set(CPACK_PACKAGE_HOMEPAGE_URL  "@PROJECT_HOMEPAGE_URL@")
set(CPACK_PACKAGE_CONTACT "@PROJECT_CONTACT@")
set(CPACK_RESOURCE_FILE_LICENSE "@PROJECT_LICENSE_FILE@")

# Debian package specific variables
set(CPACK_DEBIAN_PACKAGE_HOMEPAGE "@PROJECT_HOMEPAGE_URL@")

set(Dyninst_DEBIAN_PACKAGE_RELEASE @Dyninst_DEBIAN_PACKAGE_RELEASE@)
if(DEFINED Dyninst_DEBIAN_PACKAGE_RELEASE)
    set(CPACK_DEBIAN_PACKAGE_RELEASE ${Dyninst_DEBIAN_PACKAGE_RELEASE})
elseif(DEFINED ENV{Dyninst_DEBIAN_PACKAGE_RELEASE@)
    set(CPACK_DEBIAN_PACKAGE_RELEASE $ENV{Dyninst_DEBIAN_PACKAGE_RELEASE})
else()
    set(CPACK_DEBIAN_PACKAGE_RELEASE "local")
endif()

# RPM package specific variables
if(CPACK_PACKAGING_INSTALL_PREFIX)
    set(CPACK_RPM_EXCLUDE_FROM_AUTO_FILELIST_ADDITION "${CPACK_PACKAGING_INSTALL_PREFIX}")
endif()

set(Dyninst_RPM_PACKAGE_RELEASE @Dyninst_RPM_PACKAGE_RELEASE@)
if(Dyninst_RPM_PACKAGE_RELEASE)
    set(CPACK_RPM_PACKAGE_RELEASE ${Dyninst_RPM_PACKAGE_RELEASE})
elseif(DEFINED ENV{Dyninst_RPM_PACKAGE_RELEASE})
    set(CPACK_RPM_PACKAGE_RELEASE $ENV{Dyninst_RPM_PACKAGE_RELEASE})
else()
    set(CPACK_RPM_PACKAGE_RELEASE "local")
endif()

# Get rpm distro
if(CPACK_RPM_PACKAGE_RELEASE)
    set(CPACK_RPM_PACKAGE_RELEASE_DIST ON)
endif()

# Prepare final version for the CPACK use
set(CPACK_PACKAGE_VERSION "${CPACK_PACKAGE_VERSION_MAJOR}.${CPACK_PACKAGE_VERSION_MINOR}.${CPACK_PACKAGE_VERSION_PATCH}")

# Set the names now using CPACK utility
set(CPACK_DEBIAN_FILE_NAME "DEB-DEFAULT")
set(CPACK_RPM_FILE_NAME "RPM-DEFAULT")

include(CPack)
